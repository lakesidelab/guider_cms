<%= form_with(model: category, local: true) do |form| %>
  <% if category.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(category.errors.count, "error") %> prohibited this category from being saved:</h2>

      <ul>
        <% category.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>


  <div class="form-group">
    <h5><%= form.label :name%></h5>
    <p>The name of the category you want to create</p>
    <%= form.text_field :classification, class: "form-control", required: true %>
  </div>


  <% if @root_categories != [] %>
    <div class="form-group">
      <h5><%= form.label :parent_id %></h5>
      <p>If you want your category to be a parent, then leave this empty, otherwise if you want it to
      be a child of a category you have already created then select the desired category</p>
      <%= form.select :parent_id, options_for_select(category_options_array(), @category.parent_id), {include_blank: true} ,class: "form-control" %>
    </div>
  <% end %>

  <div class="form-group">
    <%= form.label :header_image %>
    <%= form.file_field :header_image %>
  </div>

  <% if @category && @category.parent_id.nil? %>
  <div class="form-group">
    <h5>View type</h5>
    <p>Grid view type will have everything in a grid whereas menu will have categories listed on the left</p>
    <b>This input will only be considered, if the category being created does not have a parent</b>
    <%= form.select :view_type, @view_type, {selected: "ordered list"}, class: "form-control" %>
  </div>
  <% end %>



  <div class="actions">
    <%= form.submit class: "btn btn-outline-primary" %>
  </div>
<% end %>
